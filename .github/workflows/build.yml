name: Continous integration
on: 
  workflow_dispatch:
  push:
#     branches: [ main ]
#     # Publish semver tags as releases.
    tags: 
      - "dev-*"
#   pull_request:
#     branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG_IMAGE: ghcr.io/lintasarta/test:${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
        - name: Print Value Pada Build
          run: echo ${{ env.TAG_IMAGE }}
#       - name: Checkout repository
#         uses: actions/checkout@v2
        
#       - name: Install cosign
#         if: github.event_name != 'pull_request'
#         uses: sigstore/cosign-installer@1e95c1de343b5b0c23352d6417ee3e48d5bcd422
#         with:
#           cosign-release: 'v1.4.0'
          
#       - name: Setup Docker buildx
#         uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
        
#       - name: Log into registry ${{ env.REGISTRY }}
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Extract Docker metadata
#         id: meta
#         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
#       - name: Build and push Docker image
#         id: build-and-push
#         uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#         with:
#           context: .
#           push: ${{ github.event_name != 'pull_request' }}
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Print Value Pada Deploy
        run: echo ${{ env.TAG_IMAGE }}
